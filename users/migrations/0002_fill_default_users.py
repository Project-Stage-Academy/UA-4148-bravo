# Generated by Django 5.2.4 on 2025-09-02 00:04

from django.db import migrations
from django.contrib.auth.hashers import make_password
from django.apps import apps
from django.db.models.signals import post_migrate

def create_default_users(apps, schema_editor):
    User = apps.get_model('users', 'User')
    UserRole = apps.get_model('users', 'UserRole')

    roles = {}
    for role_name in ['admin', 'moderator', 'user']:
        role_obj, _ = UserRole.objects.get_or_create(role=role_name)
        roles[role_name] = role_obj

    users_data = [
        {
            "email": "admin@example.com",
            "first_name": "Admin",
            "last_name": "User",
            "password": "admin1234",
            "role": roles['admin'],
            "is_active": True,
            "is_staff": True,
            "is_superuser": True,
        },
        {
            "email": "mod@example.com",
            "first_name": "Moderator",
            "last_name": "User",
            "password": "mod1234",
            "role": roles['moderator'],
            "is_active": True,
        },
        {
            "email": "user_startup@example.com",
            "first_name": "User",
            "last_name": "Startup",
            "password": "user1234",
            "role": roles['user'],
            "is_active": True,
        },
        {
            "email": "user_investor@example.com",
            "first_name": "User2",
            "last_name": "Investor",
            "password": "user1234",
            "role": roles['user'],
            "is_active": True,
        },
    ]

    for udata in users_data:
        user, created = User.objects.update_or_create(
            email=udata['email'],
            defaults={k: v for k, v in udata.items() if k != 'password'}
        )
        if created or not user.check_password(udata['password']):
            user.password = make_password(udata['password'])
            user.save()

def remove_default_users(apps, schema_editor):
    User = apps.get_model("users", "User")
    User.objects.filter(email__in=[
        "admin@example.com",
        "mod@example.com",
        "user1@example.com",
        "user2@example.com"
    ]).delete()
class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_default_users, remove_default_users),
    ]
