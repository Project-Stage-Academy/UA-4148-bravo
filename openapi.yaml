openapi: 3.0.3
info:
  title: Your API
  version: 1.0.0
  description: REST API for authentication and account management (and more).
  contact:
    name: Team
    email: support@example.com
  license:
    name: Proprietary
paths:
  /api/v1/auth/auth/jwt/logout/:
    post:
      operationId: auth_auth_jwt_logout_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Custom view for obtaining JWT tokens.
        Uses CustomTokenObtainPairSerializer for token generation.
      summary: Obtain JWT access/refresh tokens
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: Invalid credentials
  /api/v1/auth/jwt/logout/:
    post:
      operationId: auth_jwt_logout_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      summary: Logout (blacklist refresh token)
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      summary: Refresh JWT access token
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/me/:
    get:
      operationId: auth_me
      description: Returns the profile information of the currently authenticated
        user. Requires a valid JWT access token. If the token is missing or invalid,
        returns 401 Unauthorized.
      summary: Retrieve the currently authenticated user
      tags:
      - Auth
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
        '401':
          description: Unauthorized - missing or invalid token
        '403':
          description: Forbidden - user account is inactive
        '404':
          description: Not Found - user no longer exists
  /api/v1/auth/oauth/login/:
    post:
      operationId: auth_oauth_login_create
      description: |-
        Handle authentication requests, routing to appropriate method based on input.

        Args:
            request: DRF request object containing authentication credentials
            *args: Additional positional arguments
            **kwargs: Additional keyword arguments

        Returns:
            Response: JSON containing either:
                - JWT tokens and user data (success)
                - Error message (failure)

        Status Codes:
            - 200 OK: Successful authentication
            - 400 Bad Request: Missing/invalid parameters
            - 401 Unauthorized: Invalid credentials
      summary: Login with OAuth provider to obtain JWT
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
        '400':
          description: Invalid request or provider token
        '403':
          description: Email not provided/verified by provider
  /api/v1/auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Process password reset request.

        Args:
            request (Request): HTTP request with 'email' in data.

        Returns:
            Response:
                - 200 OK with success detail if email sent.
                - 400 Bad Request if email is missing.
                - 404 Not Found if user with email doesn't exist.
      summary: Request password reset
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: Password reset email sent
        '400':
          description: Validation error
        '404':
          description: User not found
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Process password reset confirmation.

        Args:
            request (Request): HTTP request with 'uid', 'token', 'new_password' in data.

        Returns:
            Response:
                - 200 OK with success detail if password updated.
                - 400 Bad Request if any validation fails.
      summary: Confirm password reset
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid token, UID, or password
  /api/v1/auth/register/:
    post:
      operationId: auth_register_create
      description: Handle user registration request.
      summary: Register a new user
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserCreateRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '201':
          description: User created and verification email sent
        '400':
          description: Validation errors
  /api/v1/auth/resend-email/:
    post:
      operationId: auth_resend_email_create
      description: |-
        Resend the email verification link to a user's email address.

        This view validates the input data, retrieves the user by `user_id`,
        updates the `pending_email` if a new one is provided, generates a new
        verification token if not supplied, constructs the verification URL,
        renders HTML and plain text email templates, sends the email, and returns
        a generic success response regardless of whether the user exists.

        The email is sent to `pending_email` if it exists; otherwise, the user's
        primary email is used. The response does not disclose whether the user
        exists for security reasons.

        Args:
            request (rest_framework.request.Request): DRF request object containing:
                - user_id (int): Required ID of the user.
                - email (str, optional): New pending email to update.
                - token (str, optional): Custom verification token to use.

        Returns:
            rest_framework.response.Response: HTTP 202 Accepted with a generic
            message indicating that if the account exists, a verification email
            has been sent.
      summary: Resend verification email
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '202':
          description: If the account exists, a verification email has been sent
        '400':
          description: Missing or invalid data
  /api/v1/auth/verify-email/{user_id}/{token}/:
    get:
      operationId: auth_verify_email_retrieve
      description: Handle email verification link.
      summary: Verify email address
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Auth
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: Email verified
        '400':
          description: Invalid or expired verification link
  /api/v1/communications/notification-types/:
    get:
      operationId: communications_notification_types_list
      description: |-
        API endpoint that allows notification types to be viewed.
        Requires authentication.
      tags:
      - communications
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationType'
          description: ''
  /api/v1/communications/notification-types/{id}/:
    get:
      operationId: communications_notification_types_retrieve
      description: |-
        API endpoint that allows notification types to be viewed.
        Requires authentication.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notification Type.
        required: true
      tags:
      - communications
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationType'
          description: ''
  /api/v1/communications/preferences/:
    get:
      operationId: communications_preferences_list
      description: API endpoint that allows users to view and update their notification
        preferences.
      tags:
      - communications
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
  /api/v1/communications/preferences/{id}/:
    get:
      operationId: communications_preferences_retrieve
      description: API endpoint that allows users to view and update their notification
        preferences.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - communications
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
    patch:
      operationId: communications_preferences_partial_update
      description: API endpoint that allows users to view and update their notification
        preferences.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - communications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
  /api/v1/communications/preferences/{id}/update_type_preference/:
    patch:
      operationId: communications_preferences_update_type_preference_partial_update
      description: |-
        Update a specific notification type preference.
        Expected payload: {"notification_type_id": 1, "frequency": "immediate"}
        Errors: 400 (validation), 404 (preference not found)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - communications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
  /api/v1/communications/preferences/options/:
    get:
      operationId: communications_preferences_options_retrieve
      description: |-
        Return business-level options for notification preferences (not HTTP OPTIONS).

        Currently returns available frequency choices.
      tags:
      - communications
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
  /api/v1/investments/api/v1/investments/subscriptions/create/:
    post:
      operationId: investments_api_v1_investments_subscriptions_create_create
      description: |-
        API endpoint for creating a new investment subscription.

        - Requires authentication and investor role.
        - Validates funding constraints and prevents invalid investments.
        - Returns project funding status along with subscription details.
      tags:
      - investments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCreate'
          description: ''
  /api/v1/investors/:
    get:
      operationId: investors_list
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Investor'
          description: ''
    post:
      operationId: investors_create
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investor'
          description: ''
  /api/v1/investors/{id}/:
    get:
      operationId: investors_retrieve
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Investor.
        required: true
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investor'
          description: ''
    put:
      operationId: investors_update
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Investor.
        required: true
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investor'
          description: ''
    patch:
      operationId: investors_partial_update
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Investor.
        required: true
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvestorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvestorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvestorRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investor'
          description: ''
    delete:
      operationId: investors_destroy
      description: |-
        ViewSet for managing Investor instances.
        Optimized with select_related to avoid N+1 queries when fetching related user, industry, and location.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Investor.
        required: true
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/investors/saved/:
    get:
      operationId: investors_saved_list
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedStartup'
          description: ''
    post:
      operationId: investors_saved_create
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedStartup'
          description: ''
  /api/v1/investors/saved/{id}/:
    get:
      operationId: investors_saved_retrieve
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedStartup'
          description: ''
    put:
      operationId: investors_saved_update
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedStartupRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedStartup'
          description: ''
    patch:
      operationId: investors_saved_partial_update
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - investors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSavedStartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSavedStartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSavedStartupRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedStartup'
          description: ''
    delete:
      operationId: investors_saved_destroy
      description: |-
        ViewSet for managing SavedStartup instances.
        Only authenticated investors who own the SavedStartup can modify/delete it.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - investors
      security:
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/projects/projects/:
    get:
      operationId: projects_projects_list
      description: |-
        API endpoint for viewing and editing projects.

        This ViewSet supports both read and write operations for projects.
        It optimizes database access by using `select_related` for related fields
        (`startup` and `category`) to avoid N+1 query issues.

        Features:
            - Read operations: list and retrieve project details.
            - Write operations: create, update, partially update, and delete projects.
            - Filtering: by `status`, `category`, and `startup`.
            - Searching: by `title`, `description`, and `email`.
            - Ordering: by `created_at`, `funding_goal`, and `current_funding`.
            - Default ordering: newest projects first (`-created_at`).

        Permissions:
            - Authenticated users can view all projects.
            - Only the owner can modify or delete their projects.
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: startup
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          x-spec-enum-id: 73e900b46f9b46ee
          enum:
          - cancelled
          - completed
          - draft
          - in_progress
        description: |-
          * `draft` - Draft
          * `in_progress` - In Progress
          * `completed` - Completed
          * `cancelled` - Cancelled
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRead'
          description: ''
    post:
      operationId: projects_projects_create
      description: |-
        API endpoint for viewing and editing projects.

        This ViewSet supports both read and write operations for projects.
        It optimizes database access by using `select_related` for related fields
        (`startup` and `category`) to avoid N+1 query issues.

        Features:
            - Read operations: list and retrieve project details.
            - Write operations: create, update, partially update, and delete projects.
            - Filtering: by `status`, `category`, and `startup`.
            - Searching: by `title`, `description`, and `email`.
            - Ordering: by `created_at`, `funding_goal`, and `current_funding`.
            - Default ordering: newest projects first (`-created_at`).

        Permissions:
            - Authenticated users can view all projects.
            - Only the owner can modify or delete their projects.
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWrite'
          description: ''
  /api/v1/projects/projects-documents/:
    get:
      operationId: projects_projects_documents_list
      description: |-
        Overrides the list action.
        Relies on filter_queryset to validate query params and filter the queryset.
        Handles Elasticsearch connection errors gracefully with HTTP 503 response.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectDocumentList'
          description: ''
  /api/v1/projects/projects-documents/{id}/:
    get:
      operationId: projects_projects_documents_retrieve
      description: |-
        Elasticsearch-backed viewset for Project documents.
        Supports filtering, ordering, and full-text search with robust error handling.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocument'
          description: ''
  /api/v1/projects/projects-documents/functional_suggest/:
    get:
      operationId: projects_projects_documents_functional_suggest_retrieve
      description: |-
        Functional suggest functionality.

        :param request:
        :return:
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocument'
          description: ''
  /api/v1/projects/projects-documents/suggest/:
    get:
      operationId: projects_projects_documents_suggest_retrieve
      description: Suggest functionality.
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocument'
          description: ''
  /api/v1/projects/projects/{id}/:
    get:
      operationId: projects_projects_retrieve
      description: |-
        API endpoint for viewing and editing projects.

        This ViewSet supports both read and write operations for projects.
        It optimizes database access by using `select_related` for related fields
        (`startup` and `category`) to avoid N+1 query issues.

        Features:
            - Read operations: list and retrieve project details.
            - Write operations: create, update, partially update, and delete projects.
            - Filtering: by `status`, `category`, and `startup`.
            - Searching: by `title`, `description`, and `email`.
            - Ordering: by `created_at`, `funding_goal`, and `current_funding`.
            - Default ordering: newest projects first (`-created_at`).

        Permissions:
            - Authenticated users can view all projects.
            - Only the owner can modify or delete their projects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRead'
          description: ''
    put:
      operationId: projects_projects_update
      description: |-
        API endpoint for viewing and editing projects.

        This ViewSet supports both read and write operations for projects.
        It optimizes database access by using `select_related` for related fields
        (`startup` and `category`) to avoid N+1 query issues.

        Features:
            - Read operations: list and retrieve project details.
            - Write operations: create, update, partially update, and delete projects.
            - Filtering: by `status`, `category`, and `startup`.
            - Searching: by `title`, `description`, and `email`.
            - Ordering: by `created_at`, `funding_goal`, and `current_funding`.
            - Default ordering: newest projects first (`-created_at`).

        Permissions:
            - Authenticated users can view all projects.
            - Only the owner can modify or delete their projects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectWriteRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWrite'
          description: ''
    patch:
      operationId: projects_projects_partial_update
      description: Handle PATCH requests for partially updating a project.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectWriteRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWrite'
          description: ''
    delete:
      operationId: projects_projects_destroy
      description: |-
        API endpoint for viewing and editing projects.

        This ViewSet supports both read and write operations for projects.
        It optimizes database access by using `select_related` for related fields
        (`startup` and `category`) to avoid N+1 query issues.

        Features:
            - Read operations: list and retrieve project details.
            - Write operations: create, update, partially update, and delete projects.
            - Filtering: by `status`, `category`, and `startup`.
            - Searching: by `title`, `description`, and `email`.
            - Ordering: by `created_at`, `funding_goal`, and `current_funding`.
            - Default ordering: newest projects first (`-created_at`).

        Permissions:
            - Authenticated users can view all projects.
            - Only the owner can modify or delete their projects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/projects/search/:
    get:
      operationId: projects_search_list
      description: |-
        Overrides the list action.
        Relies on filter_queryset to validate query params and filter the queryset.
        Handles Elasticsearch connection errors gracefully with HTTP 503 response.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - projects
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectDocumentList'
          description: ''
  /api/v1/startups/:
    get:
      operationId: startups_list
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      parameters:
      - in: query
        name: industry
        schema:
          type: integer
      - in: query
        name: location__country
        schema:
          type: string
          x-spec-enum-id: 1a77d4ecc4ebd8ed
          enum:
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AO
          - AQ
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BL
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CR
          - CU
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IR
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KP
          - KR
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MF
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - 'NO'
          - NP
          - NR
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PR
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SD
          - SE
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - SS
          - ST
          - SV
          - SX
          - SY
          - SZ
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - YE
          - YT
          - ZA
          - ZM
          - ZW
        description: |-
          Country of the location

          * `AF` - Afghanistan
          * `AX` - Åland Islands
          * `AL` - Albania
          * `DZ` - Algeria
          * `AS` - American Samoa
          * `AD` - Andorra
          * `AO` - Angola
          * `AI` - Anguilla
          * `AQ` - Antarctica
          * `AG` - Antigua and Barbuda
          * `AR` - Argentina
          * `AM` - Armenia
          * `AW` - Aruba
          * `AU` - Australia
          * `AT` - Austria
          * `AZ` - Azerbaijan
          * `BS` - Bahamas
          * `BH` - Bahrain
          * `BD` - Bangladesh
          * `BB` - Barbados
          * `BY` - Belarus
          * `BE` - Belgium
          * `BZ` - Belize
          * `BJ` - Benin
          * `BM` - Bermuda
          * `BT` - Bhutan
          * `BO` - Bolivia
          * `BQ` - Bonaire, Sint Eustatius and Saba
          * `BA` - Bosnia and Herzegovina
          * `BW` - Botswana
          * `BV` - Bouvet Island
          * `BR` - Brazil
          * `IO` - British Indian Ocean Territory
          * `BN` - Brunei
          * `BG` - Bulgaria
          * `BF` - Burkina Faso
          * `BI` - Burundi
          * `CV` - Cabo Verde
          * `KH` - Cambodia
          * `CM` - Cameroon
          * `CA` - Canada
          * `KY` - Cayman Islands
          * `CF` - Central African Republic
          * `TD` - Chad
          * `CL` - Chile
          * `CN` - China
          * `CX` - Christmas Island
          * `CC` - Cocos (Keeling) Islands
          * `CO` - Colombia
          * `KM` - Comoros
          * `CG` - Congo
          * `CD` - Congo (the Democratic Republic of the)
          * `CK` - Cook Islands
          * `CR` - Costa Rica
          * `CI` - Côte d'Ivoire
          * `HR` - Croatia
          * `CU` - Cuba
          * `CW` - Curaçao
          * `CY` - Cyprus
          * `CZ` - Czechia
          * `DK` - Denmark
          * `DJ` - Djibouti
          * `DM` - Dominica
          * `DO` - Dominican Republic
          * `EC` - Ecuador
          * `EG` - Egypt
          * `SV` - El Salvador
          * `GQ` - Equatorial Guinea
          * `ER` - Eritrea
          * `EE` - Estonia
          * `SZ` - Eswatini
          * `ET` - Ethiopia
          * `FK` - Falkland Islands (Malvinas)
          * `FO` - Faroe Islands
          * `FJ` - Fiji
          * `FI` - Finland
          * `FR` - France
          * `GF` - French Guiana
          * `PF` - French Polynesia
          * `TF` - French Southern Territories
          * `GA` - Gabon
          * `GM` - Gambia
          * `GE` - Georgia
          * `DE` - Germany
          * `GH` - Ghana
          * `GI` - Gibraltar
          * `GR` - Greece
          * `GL` - Greenland
          * `GD` - Grenada
          * `GP` - Guadeloupe
          * `GU` - Guam
          * `GT` - Guatemala
          * `GG` - Guernsey
          * `GN` - Guinea
          * `GW` - Guinea-Bissau
          * `GY` - Guyana
          * `HT` - Haiti
          * `HM` - Heard Island and McDonald Islands
          * `VA` - Holy See
          * `HN` - Honduras
          * `HK` - Hong Kong
          * `HU` - Hungary
          * `IS` - Iceland
          * `IN` - India
          * `ID` - Indonesia
          * `IR` - Iran
          * `IQ` - Iraq
          * `IE` - Ireland
          * `IM` - Isle of Man
          * `IL` - Israel
          * `IT` - Italy
          * `JM` - Jamaica
          * `JP` - Japan
          * `JE` - Jersey
          * `JO` - Jordan
          * `KZ` - Kazakhstan
          * `KE` - Kenya
          * `KI` - Kiribati
          * `KW` - Kuwait
          * `KG` - Kyrgyzstan
          * `LA` - Laos
          * `LV` - Latvia
          * `LB` - Lebanon
          * `LS` - Lesotho
          * `LR` - Liberia
          * `LY` - Libya
          * `LI` - Liechtenstein
          * `LT` - Lithuania
          * `LU` - Luxembourg
          * `MO` - Macao
          * `MG` - Madagascar
          * `MW` - Malawi
          * `MY` - Malaysia
          * `MV` - Maldives
          * `ML` - Mali
          * `MT` - Malta
          * `MH` - Marshall Islands
          * `MQ` - Martinique
          * `MR` - Mauritania
          * `MU` - Mauritius
          * `YT` - Mayotte
          * `MX` - Mexico
          * `FM` - Micronesia (Federated States of)
          * `MD` - Moldova
          * `MC` - Monaco
          * `MN` - Mongolia
          * `ME` - Montenegro
          * `MS` - Montserrat
          * `MA` - Morocco
          * `MZ` - Mozambique
          * `MM` - Myanmar
          * `NA` - Namibia
          * `NR` - Nauru
          * `NP` - Nepal
          * `NL` - Netherlands
          * `NC` - New Caledonia
          * `NZ` - New Zealand
          * `NI` - Nicaragua
          * `NE` - Niger
          * `NG` - Nigeria
          * `NU` - Niue
          * `NF` - Norfolk Island
          * `KP` - North Korea
          * `MK` - North Macedonia
          * `MP` - Northern Mariana Islands
          * `NO` - Norway
          * `OM` - Oman
          * `PK` - Pakistan
          * `PW` - Palau
          * `PS` - Palestine, State of
          * `PA` - Panama
          * `PG` - Papua New Guinea
          * `PY` - Paraguay
          * `PE` - Peru
          * `PH` - Philippines
          * `PN` - Pitcairn
          * `PL` - Poland
          * `PT` - Portugal
          * `PR` - Puerto Rico
          * `QA` - Qatar
          * `RE` - Réunion
          * `RO` - Romania
          * `RU` - Russia
          * `RW` - Rwanda
          * `BL` - Saint Barthélemy
          * `SH` - Saint Helena, Ascension and Tristan da Cunha
          * `KN` - Saint Kitts and Nevis
          * `LC` - Saint Lucia
          * `MF` - Saint Martin (French part)
          * `PM` - Saint Pierre and Miquelon
          * `VC` - Saint Vincent and the Grenadines
          * `WS` - Samoa
          * `SM` - San Marino
          * `ST` - Sao Tome and Principe
          * `SA` - Saudi Arabia
          * `SN` - Senegal
          * `RS` - Serbia
          * `SC` - Seychelles
          * `SL` - Sierra Leone
          * `SG` - Singapore
          * `SX` - Sint Maarten (Dutch part)
          * `SK` - Slovakia
          * `SI` - Slovenia
          * `SB` - Solomon Islands
          * `SO` - Somalia
          * `ZA` - South Africa
          * `GS` - South Georgia and the South Sandwich Islands
          * `KR` - South Korea
          * `SS` - South Sudan
          * `ES` - Spain
          * `LK` - Sri Lanka
          * `SD` - Sudan
          * `SR` - Suriname
          * `SJ` - Svalbard and Jan Mayen
          * `SE` - Sweden
          * `CH` - Switzerland
          * `SY` - Syria
          * `TW` - Taiwan
          * `TJ` - Tajikistan
          * `TZ` - Tanzania
          * `TH` - Thailand
          * `TL` - Timor-Leste
          * `TG` - Togo
          * `TK` - Tokelau
          * `TO` - Tonga
          * `TT` - Trinidad and Tobago
          * `TN` - Tunisia
          * `TR` - Türkiye
          * `TM` - Turkmenistan
          * `TC` - Turks and Caicos Islands
          * `TV` - Tuvalu
          * `UG` - Uganda
          * `UA` - Ukraine
          * `AE` - United Arab Emirates
          * `GB` - United Kingdom
          * `UM` - United States Minor Outlying Islands
          * `US` - United States of America
          * `UY` - Uruguay
          * `UZ` - Uzbekistan
          * `VU` - Vanuatu
          * `VE` - Venezuela
          * `VN` - Vietnam
          * `VG` - Virgin Islands (British)
          * `VI` - Virgin Islands (U.S.)
          * `WF` - Wallis and Futuna
          * `EH` - Western Sahara
          * `YE` - Yemen
          * `ZM` - Zambia
          * `ZW` - Zimbabwe
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: stage
        schema:
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          enum:
          - exit
          - idea
          - launch
          - mvp
          - scale
        description: |-
          Current development stage of the startup

          * `idea` - Idea
          * `mvp` - MVP
          * `launch` - Launch
          * `scale` - Scale
          * `exit` - Exit
      tags:
      - startups
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Startup'
          description: ''
    post:
      operationId: startups_create
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      tags:
      - startups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StartupRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Startup'
          description: ''
  /api/v1/startups/{id}/:
    get:
      operationId: startups_retrieve
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Startup.
        required: true
      tags:
      - startups
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Startup'
          description: ''
    put:
      operationId: startups_update
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Startup.
        required: true
      tags:
      - startups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StartupRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Startup'
          description: ''
    patch:
      operationId: startups_partial_update
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Startup.
        required: true
      tags:
      - startups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStartupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStartupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStartupRequest'
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Startup'
          description: ''
    delete:
      operationId: startups_destroy
      description: |-
        Base ViewSet that runs model full_clean() validation
        and logs creation and update events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Startup.
        required: true
      tags:
      - startups
      security:
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/startups/search/:
    get:
      operationId: startups_search_list
      description: DocumentViewSet with suggest and functional-suggest mix-ins.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - startups
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStartupDocumentList'
          description: ''
  /api/v1/startups/search/{id}/:
    get:
      operationId: startups_search_retrieve
      description: DocumentViewSet with suggest and functional-suggest mix-ins.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Startup.
        required: true
      tags:
      - startups
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupDocument'
          description: ''
  /api/v1/startups/search/functional_suggest/:
    get:
      operationId: startups_search_functional_suggest_retrieve
      description: |-
        Functional suggest functionality.

        :param request:
        :return:
      tags:
      - startups
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupDocument'
          description: ''
  /api/v1/startups/search/suggest/:
    get:
      operationId: startups_search_suggest_retrieve
      description: Suggest functionality.
      tags:
      - startups
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupDocument'
          description: ''
components:
  schemas:
    Category:
      type: object
      description: Read-only serializer for category details.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
      required:
      - id
      - name
    CategoryRequest:
      type: object
      description: Read-only serializer for category details.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
      required:
      - name
    CurrentUser:
      type: object
      description: Public serializer for the currently logged-in user.
      properties:
        user_id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        user_phone:
          type: string
          readOnly: true
          nullable: true
        title:
          type: string
          readOnly: true
          nullable: true
        role:
          type: string
          readOnly: true
      required:
      - email
      - first_name
      - last_name
      - role
      - title
      - user_id
      - user_phone
    CustomTokenObtainPairRequest:
      type: object
      description: |-
        Custom serializer for obtaining JWT tokens.
        Adds custom claims to the token and includes additional user data in the response.
        Also prevents token issuance for inactive users.
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    CustomUserCreateRequest:
      type: object
      description: Custom user registration serializer that handles user creation
        with role assignment.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 50
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        password:
          type: string
          writeOnly: true
          minLength: 1
          pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: Confirm Password
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
    Investor:
      type: object
      description: |-
        Serializer for the Investor model.
        Includes all fields defined in the abstract Company base class and Investor-specific fields.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          description: The user who owns this investor
        industry:
          type: integer
        company_name:
          type: string
          maxLength: 254
        location:
          type: integer
        logo:
          type: string
          format: uri
          nullable: true
        description:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        founded_year:
          type: integer
          minimum: 1900
          maximum: 2025
        team_size:
          type: integer
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          description: |-
            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
          x-spec-enum-id: 0a73ba3d72a52b97
          default: mvp
        fund_size:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company_name
      - created_at
      - email
      - founded_year
      - fund_size
      - id
      - industry
      - location
      - team_size
      - updated_at
      - user
    InvestorRequest:
      type: object
      description: |-
        Serializer for the Investor model.
        Includes all fields defined in the abstract Company base class and Investor-specific fields.
      properties:
        industry:
          type: integer
        company_name:
          type: string
          minLength: 1
          maxLength: 254
        location:
          type: integer
        logo:
          type: string
          format: binary
          nullable: true
        description:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        founded_year:
          type: integer
          minimum: 1900
          maximum: 2025
        team_size:
          type: integer
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          description: |-
            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
          x-spec-enum-id: 0a73ba3d72a52b97
          default: mvp
        fund_size:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
      required:
      - company_name
      - email
      - founded_year
      - fund_size
      - industry
      - location
      - team_size
    NotificationType:
      type: object
      description: Serializer for notification types.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          readOnly: true
          description: Unique code for the notification type
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          description: Human-readable name
          maxLength: 100
        description:
          type: string
          description: Description of when this notification is sent
        is_active:
          type: boolean
          description: Whether this notification type is active
      required:
      - code
      - id
      - name
    NotificationTypeRequest:
      type: object
      description: Serializer for notification types.
      properties:
        name:
          type: string
          minLength: 1
          description: Human-readable name
          maxLength: 100
        description:
          type: string
          description: Description of when this notification is sent
        is_active:
          type: boolean
          description: Whether this notification type is active
      required:
      - name
    PaginatedProjectDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDocument'
    PaginatedStartupDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StartupDocument'
    PasswordResetConfirmRequest:
      type: object
      description: |-
        Serializer for confirming and completing the password reset.

        Attributes:
            uid (str): Base64 encoded user ID.
            token (str): Password reset token.
            new_password (str): New password to set. Must meet validation requirements.
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - new_password
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: |-
        Serializer for requesting a password reset email.

        Attributes:
            email (str): User's registered email address.
                         Required field. Validates that the user exists.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedInvestorRequest:
      type: object
      description: |-
        Serializer for the Investor model.
        Includes all fields defined in the abstract Company base class and Investor-specific fields.
      properties:
        industry:
          type: integer
        company_name:
          type: string
          minLength: 1
          maxLength: 254
        location:
          type: integer
        logo:
          type: string
          format: binary
          nullable: true
        description:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        founded_year:
          type: integer
          minimum: 1900
          maximum: 2025
        team_size:
          type: integer
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          description: |-
            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
          x-spec-enum-id: 0a73ba3d72a52b97
          default: mvp
        fund_size:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
    PatchedProjectWriteRequest:
      type: object
      description: |-
        Serializer for creating/updating Project with validation.
        Ensures required fields match the model and cross-field rules are enforced.
      properties:
        startup_id:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        business_plan:
          type: string
          format: binary
          nullable: true
        media_files:
          type: string
          format: binary
          nullable: true
        status:
          enum:
          - draft
          - in_progress
          - completed
          - cancelled
          type: string
          description: |-
            * `draft` - Draft
            * `in_progress` - In Progress
            * `completed` - Completed
            * `cancelled` - Cancelled
          x-spec-enum-id: 73e900b46f9b46ee
        duration:
          type: integer
          maximum: 3650
          minimum: 1
          description: Duration in days
        funding_goal:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        current_funding:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          default: '0.00'
        category_id:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        has_patents:
          type: boolean
        is_participant:
          type: boolean
        is_active:
          type: boolean
    PatchedSavedStartupRequest:
      type: object
      description: |-
        Serializer for creating and retrieving SavedStartup records.

        Ensures:
        - Only authenticated investors can save startups.
        - Prevents saving own startup.
        - Avoids duplicates via validator and IntegrityError handling.
      properties:
        startup:
          type: integer
          writeOnly: true
        status:
          enum:
          - watching
          - contacted
          - negotiating
          - passed
          type: string
          description: |-
            * `watching` - Watching
            * `contacted` - Contacted
            * `negotiating` - Negotiating
            * `passed` - Passed
          x-spec-enum-id: 34827c2d6e495653
        notes:
          type: string
          nullable: true
    PatchedStartupRequest:
      type: object
      description: Full serializer with nested project details.
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 254
        description:
          type: string
        industry:
          type: integer
        location:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        founded_year:
          type: integer
          maximum: 2025
          minimum: 1900
        team_size:
          type: integer
          maximum: 2147483647
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          description: |-
            Current development stage of the startup

            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
        social_links:
          type: object
          additionalProperties: {}
        user:
          type: integer
          description: User who owns this startup
    PatchedUserNotificationPreferenceRequest:
      type: object
      description: |-
        Serializer for the UserNotificationPreference model.
        Handles both creation and updates of notification preferences.
        The user is automatically set from the request context on creation.
      properties:
        enable_in_app:
          type: boolean
          title: Enable in-app notifications
        enable_email:
          type: boolean
          title: Enable email notifications
        enable_push:
          type: boolean
          title: Enable push notifications
    ProjectDocument:
      type: object
      description: Serializer for the Elasticsearch ProjectDocument.
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
        startup:
          type: string
        category:
          type: string
      required:
      - category
      - description
      - id
      - startup
      - status
      - title
    ProjectRead:
      type: object
      description: |-
        Serializer for reading Project with nested related objects,
        including custom fields for startup details.
      properties:
        id:
          type: integer
          readOnly: true
        startup:
          allOf:
          - $ref: '#/components/schemas/StartupProject'
          readOnly: true
        startup_name:
          type: string
          readOnly: true
        startup_logo:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        business_plan:
          type: string
          format: uri
          readOnly: true
          nullable: true
        media_files:
          type: string
          format: uri
          readOnly: true
          nullable: true
        status:
          enum:
          - draft
          - in_progress
          - completed
          - cancelled
          type: string
          description: |-
            * `draft` - Draft
            * `in_progress` - In Progress
            * `completed` - Completed
            * `cancelled` - Cancelled
          x-spec-enum-id: 73e900b46f9b46ee
          readOnly: true
        status_display:
          type: string
          readOnly: true
        duration:
          type: integer
          readOnly: true
          description: Duration in days
        funding_goal:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          readOnly: true
        current_funding:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        website:
          type: string
          format: uri
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        has_patents:
          type: boolean
          readOnly: true
        is_participant:
          type: boolean
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business_plan
      - category
      - created_at
      - current_funding
      - description
      - duration
      - email
      - funding_goal
      - has_patents
      - id
      - is_active
      - is_participant
      - media_files
      - startup
      - startup_logo
      - startup_name
      - status
      - status_display
      - title
      - updated_at
      - website
    ProjectWrite:
      type: object
      description: |-
        Serializer for creating/updating Project with validation.
        Ensures required fields match the model and cross-field rules are enforced.
      properties:
        id:
          type: integer
          readOnly: true
        startup_id:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
        business_plan:
          type: string
          format: uri
          nullable: true
        media_files:
          type: string
          format: uri
          nullable: true
        status:
          enum:
          - draft
          - in_progress
          - completed
          - cancelled
          type: string
          description: |-
            * `draft` - Draft
            * `in_progress` - In Progress
            * `completed` - Completed
            * `cancelled` - Cancelled
          x-spec-enum-id: 73e900b46f9b46ee
        duration:
          type: integer
          maximum: 3650
          minimum: 1
          description: Duration in days
        funding_goal:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        current_funding:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          default: '0.00'
        category_id:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 255
        has_patents:
          type: boolean
        is_participant:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category_id
      - created_at
      - email
      - funding_goal
      - id
      - startup_id
      - title
      - updated_at
    ProjectWriteRequest:
      type: object
      description: |-
        Serializer for creating/updating Project with validation.
        Ensures required fields match the model and cross-field rules are enforced.
      properties:
        startup_id:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        business_plan:
          type: string
          format: binary
          nullable: true
        media_files:
          type: string
          format: binary
          nullable: true
        status:
          enum:
          - draft
          - in_progress
          - completed
          - cancelled
          type: string
          description: |-
            * `draft` - Draft
            * `in_progress` - In Progress
            * `completed` - Completed
            * `cancelled` - Cancelled
          x-spec-enum-id: 73e900b46f9b46ee
        duration:
          type: integer
          maximum: 3650
          minimum: 1
          description: Duration in days
        funding_goal:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        current_funding:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          default: '0.00'
        category_id:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        has_patents:
          type: boolean
        is_participant:
          type: boolean
        is_active:
          type: boolean
      required:
      - category_id
      - email
      - funding_goal
      - startup_id
      - title
    ResendEmailRequest:
      type: object
      description: |-
        Serializer for resending a verification email.

        This serializer is used to validate the request payload for the endpoint
        that allows resending an email verification link to a user.
        It does not reveal whether the user exists, for security purposes.

        Attributes:
            user_id (IntegerField): The ID of the target user. Must be a positive integer.
            token (CharField): The current verification token. Can be empty if a new token should be generated.
            email (EmailField, optional): A new email address to send the verification link to.
                If provided, it will override the stored email.
      properties:
        user_id:
          type: integer
          minimum: 1
        token:
          type: string
        email:
          type: string
          format: email
          minLength: 1
      required:
      - user_id
    SavedStartup:
      type: object
      description: |-
        Serializer for creating and retrieving SavedStartup records.

        Ensures:
        - Only authenticated investors can save startups.
        - Prevents saving own startup.
        - Avoids duplicates via validator and IntegrityError handling.
      properties:
        id:
          type: integer
          readOnly: true
        investor:
          type: integer
          readOnly: true
        startup_name:
          type: string
          readOnly: true
        status:
          enum:
          - watching
          - contacted
          - negotiating
          - passed
          type: string
          description: |-
            * `watching` - Watching
            * `contacted` - Contacted
            * `negotiating` - Negotiating
            * `passed` - Passed
          x-spec-enum-id: 34827c2d6e495653
        notes:
          type: string
          nullable: true
        saved_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - investor
      - saved_at
      - startup_name
      - updated_at
    SavedStartupRequest:
      type: object
      description: |-
        Serializer for creating and retrieving SavedStartup records.

        Ensures:
        - Only authenticated investors can save startups.
        - Prevents saving own startup.
        - Avoids duplicates via validator and IntegrityError handling.
      properties:
        startup:
          type: integer
          writeOnly: true
        status:
          enum:
          - watching
          - contacted
          - negotiating
          - passed
          type: string
          description: |-
            * `watching` - Watching
            * `contacted` - Contacted
            * `negotiating` - Negotiating
            * `passed` - Passed
          x-spec-enum-id: 34827c2d6e495653
        notes:
          type: string
          nullable: true
      required:
      - startup
    Startup:
      type: object
      description: Full serializer with nested project details.
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 254
        description:
          type: string
        industry:
          type: integer
        location:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        founded_year:
          type: integer
          maximum: 2025
          minimum: 1900
        team_size:
          type: integer
          maximum: 2147483647
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          description: |-
            Current development stage of the startup

            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
        social_links:
          type: object
          additionalProperties: {}
        user:
          type: integer
          description: User who owns this startup
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRead'
          readOnly: true
      required:
      - company_name
      - created_at
      - email
      - founded_year
      - id
      - industry
      - location
      - projects
      - updated_at
      - user
    StartupDocument:
      type: object
      description: Serializer for StartupDocument (Elasticsearch).
      properties:
        id:
          type: integer
        company_name:
          type: string
        description:
          type: string
        location:
          type: string
        stage:
          type: string
        industry:
          type: string
          readOnly: true
      required:
      - company_name
      - description
      - id
      - industry
      - location
      - stage
    StartupProject:
      type: object
      description: Read-only serializer for startup details.
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 254
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          description: |-
            Current development stage of the startup

            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
        website:
          type: string
          format: uri
          maxLength: 200
      required:
      - company_name
      - id
    StartupProjectRequest:
      type: object
      description: Read-only serializer for startup details.
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 254
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          description: |-
            Current development stage of the startup

            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
        website:
          type: string
          format: uri
          maxLength: 200
      required:
      - company_name
    StartupRequest:
      type: object
      description: Full serializer with nested project details.
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 254
        description:
          type: string
        industry:
          type: integer
        location:
          type: integer
        website:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        founded_year:
          type: integer
          maximum: 2025
          minimum: 1900
        team_size:
          type: integer
          maximum: 2147483647
          minimum: 1
        stage:
          enum:
          - idea
          - mvp
          - launch
          - scale
          - exit
          type: string
          x-spec-enum-id: 0a73ba3d72a52b97
          title: Development Stage
          description: |-
            Current development stage of the startup

            * `idea` - Idea
            * `mvp` - MVP
            * `launch` - Launch
            * `scale` - Scale
            * `exit` - Exit
        social_links:
          type: object
          additionalProperties: {}
        user:
          type: integer
          description: User who owns this startup
      required:
      - company_name
      - email
      - founded_year
      - industry
      - location
      - user
    SubscriptionCreate:
      type: object
      description: |-
        Serializer for creating a new investment subscription.

        Fields:
            investor (Investor): The investor making the subscription.
            project (Project): The project to invest in.
            amount (Decimal): Investment amount, required and must be >= 0.01.

        Validation:
            - Ensures project exists and is a valid instance.
            - Ensures the requesting user is an investor.
            - Prevents self-investment (investor cannot fund their own startup project).
            - Prevents investments into fully funded projects.
            - Prevents investment amounts that exceed remaining funding.
            - Ensures amount is greater than or equal to 0.01.

        Creation:
            - Uses database transactions with row-level locking to prevent race conditions.
            - Recalculates effective funding using both DB aggregate and project's current_funding to avoid drift.
            - Updates the project's current_funding field after saving the subscription.
      properties:
        id:
          type: integer
          readOnly: true
        investor:
          type: integer
        project:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - amount
      - id
      - investor
      - project
    SubscriptionCreateRequest:
      type: object
      description: |-
        Serializer for creating a new investment subscription.

        Fields:
            investor (Investor): The investor making the subscription.
            project (Project): The project to invest in.
            amount (Decimal): Investment amount, required and must be >= 0.01.

        Validation:
            - Ensures project exists and is a valid instance.
            - Ensures the requesting user is an investor.
            - Prevents self-investment (investor cannot fund their own startup project).
            - Prevents investments into fully funded projects.
            - Prevents investment amounts that exceed remaining funding.
            - Ensures amount is greater than or equal to 0.01.

        Creation:
            - Uses database transactions with row-level locking to prevent race conditions.
            - Recalculates effective funding using both DB aggregate and project's current_funding to avoid drift.
            - Updates the project's current_funding field after saving the subscription.
      properties:
        investor:
          type: integer
        project:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - amount
      - investor
      - project
    TokenBlacklistRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UserNotificationPreference:
      type: object
      description: |-
        Serializer for the UserNotificationPreference model.
        Handles both creation and updates of notification preferences.
        The user is automatically set from the request context on creation.
      properties:
        user_id:
          type: integer
          readOnly: true
        enable_in_app:
          type: boolean
          title: Enable in-app notifications
        enable_email:
          type: boolean
          title: Enable email notifications
        enable_push:
          type: boolean
          title: Enable push notifications
        type_preferences:
          type: array
          items:
            $ref: '#/components/schemas/UserNotificationTypePreference'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - type_preferences
      - updated_at
      - user_id
    UserNotificationTypePreference:
      type: object
      description: Serializer for the UserNotificationTypePreference model.
      properties:
        id:
          type: integer
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationType'
          readOnly: true
        frequency:
          enum:
          - immediate
          - daily_digest
          - weekly_summary
          - disabled
          type: string
          description: |-
            * `immediate` - Immediate
            * `daily_digest` - Daily Digest
            * `weekly_summary` - Weekly Summary
            * `disabled` - Disabled
          x-spec-enum-id: a95a4559861f428e
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - frequency
      - id
      - notification_type
      - updated_at
    UserNotificationTypePreferenceRequest:
      type: object
      description: Serializer for the UserNotificationTypePreference model.
      properties:
        notification_type_id:
          type: integer
          writeOnly: true
        frequency:
          enum:
          - immediate
          - daily_digest
          - weekly_summary
          - disabled
          type: string
          description: |-
            * `immediate` - Immediate
            * `daily_digest` - Daily Digest
            * `weekly_summary` - Weekly Summary
            * `disabled` - Disabled
          x-spec-enum-id: a95a4559861f428e
      required:
      - frequency
      - notification_type_id
