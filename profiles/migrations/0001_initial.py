# Generated by Django 5.2.4 on 2025-08-03 10:39

import django.core.validators
import django.db.models.deletion
import validation.validate_email
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('code', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator(message='Use 2â€“3 uppercase letters.', regex='^[A-Z]{2,3}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
                'db_table': 'industries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Investor Interest',
                'verbose_name_plural': 'Investor Interests',
                'db_table': 'interests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18, validators=[django.core.validators.MinValueValidator(0)])),
                ('percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Investment',
                'verbose_name_plural': 'Investments',
                'db_table': 'investments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField()),
                ('email', models.EmailField(max_length=255, unique=True, validators=[validation.validate_email.validate_email_custom])),
                ('founded_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2025)])),
                ('team_size', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('investor_logo', models.ImageField(upload_to='investors/logos/')),
                ('interests', models.TextField(blank=True, null=True)),
                ('fund_size', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('preferred_stage', models.CharField(blank=True, choices=[('idea', 'Idea'), ('prototype', 'Prototype'), ('mvp', 'MVP'), ('growth', 'Growth'), ('scale', 'Scale'), ('enterprise', 'Enterprise')], max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Investor',
                'verbose_name_plural': 'Investors',
                'db_table': 'investors',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='InvestorTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Investor Tag',
                'verbose_name_plural': 'Investor Tags',
                'db_table': 'investor_tags',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Invalid postal code format.', regex='^[\\w\\s-]{1,20}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
                'ordering': ['city__country__name', 'city__name', 'address_line'],
            },
        ),
        migrations.CreateModel(
            name='SavedStartup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('watching', 'Watching'), ('contacted', 'Contacted'), ('negotiating', 'Negotiating'), ('passed', 'Passed')], default='watching', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Saved Startup',
                'verbose_name_plural': 'Saved Startups',
                'db_table': 'saved_startups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField()),
                ('email', models.EmailField(max_length=255, unique=True, validators=[validation.validate_email.validate_email_custom])),
                ('founded_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2025)])),
                ('team_size', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('startup_logo', models.ImageField(upload_to='startups/logos/')),
                ('social_media', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('stage', models.CharField(blank=True, choices=[('idea', 'Idea'), ('prototype', 'Prototype'), ('mvp', 'MVP'), ('growth', 'Growth'), ('scale', 'Scale'), ('enterprise', 'Enterprise')], max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Startup',
                'verbose_name_plural': 'Startups',
                'db_table': 'startups',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='StartupSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Startup Social Media',
                'verbose_name_plural': 'Startup Social Media Links',
                'db_table': 'startup_social_media',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StartupTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Startup Tag',
                'verbose_name_plural': 'Startup Tags',
                'db_table': 'startup_tags',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('tag_type', models.CharField(choices=[('industry', 'Industry'), ('technology', 'Technology'), ('stage', 'Stage'), ('topic', 'Topic'), ('custom', 'Custom')], default='custom', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tags',
                'ordering': ['tag_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('region', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='profiles.country')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'db_table': 'cities',
                'ordering': ['country__name', 'name'],
            },
        ),
    ]
