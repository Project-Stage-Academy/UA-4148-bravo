# Generated by Django 5.2.4 on 2025-08-17 16:46

import django.db.models.deletion
import django_countries.fields
import validation.validate_email
import validation.validate_image
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(
                    help_text='Name of the industry (unique)',
                    max_length=100,
                    unique=True,
                    verbose_name='Industry Name'
                )),
                ('description', models.TextField(
                    blank=True,
                    default='',
                    help_text='Optional detailed description of the industry',
                    verbose_name='Description'
                )),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
                'db_table': 'industries',
                'ordering': ['name'],
                'indexes': [
                    models.Index(fields=['name'], name='industries_name_285c10_idx')
                ],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(
                    help_text='Country of the location',
                    max_length=2,
                    verbose_name='Country'
                )),
                ('region', models.CharField(
                    blank=True,
                    help_text='Region or state of the location',
                    max_length=100,
                    null=True,
                    verbose_name='Region'
                )),
                ('city', models.CharField(
                    blank=True,
                    help_text='City of the location',
                    max_length=100,
                    null=True,
                    verbose_name='City'
                )),
                ('address_line', models.CharField(
                    blank=True,
                    help_text='Street address or detailed address line',
                    max_length=254,
                    null=True,
                    verbose_name='Address Line'
                )),
                ('postal_code', models.CharField(
                    blank=True,
                    help_text='Postal or ZIP code',
                    max_length=20,
                    null=True,
                    verbose_name='Postal Code'
                )),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
                'ordering': ['country'],
                'indexes': [
                    models.Index(fields=['country'], name='locations_country_7c8456_idx'),
                    models.Index(fields=['city'], name='locations_city_278550_idx'),
                    models.Index(fields=['region'], name='locations_region_c9db38_idx')
                ],
                'constraints': [
                    models.UniqueConstraint(
                        fields=['city', 'region', 'country'],
                        name='unique_location',
                        violation_error_message='This location already exists.'
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=254, unique=True)),
                ('logo', models.ImageField(
                    blank=True,
                    null=True,
                    upload_to='company/logos/',
                    validators=[validation.validate_image.validate_image_file]
                )),
                ('description', models.TextField(blank=True, default='')),
                ('website', models.URLField(blank=True, default='')),
                ('email', models.EmailField(
                    max_length=254,
                    unique=True,
                    validators=[validation.validate_email.validate_email_custom]
                )),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stage', models.CharField(
                    choices=[
                        ('idea', 'Idea'),
                        ('mvp', 'MVP'),
                        ('launch', 'Launch'),
                        ('scale', 'Scale'),
                        ('exit', 'Exit')
                    ],
                    default='idea',
                    help_text='Current development stage of the startup',
                    max_length=20,
                    verbose_name='Development Stage'
                )),
                ('social_links', models.JSONField(
                    blank=True,
                    default=dict,
                    help_text='Social media links as a JSON object',
                    verbose_name='Social Links'
                )),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True)),
                ('team_size', models.PositiveIntegerField(blank=True, null=True)),
                ('funding_stage', models.CharField(
                    blank=True,
                    choices=[
                        ('pre_seed', 'Pre-Seed'),
                        ('seed', 'Seed'),
                        ('series_a', 'Series A'),
                        ('series_b', 'Series B'),
                        ('growth', 'Growth')
                    ],
                    max_length=50,
                    null=True
                )),
                ('investment_needs', models.TextField(blank=True, null=True)),
                ('company_size', models.CharField(
                    blank=True,
                    choices=[
                        ('1-10', '1-10'),
                        ('11-50', '11-50'),
                        ('51-200', '51-200'),
                        ('201-500', '201-500'),
                        ('500+', '500+')
                    ],
                    max_length=50,
                    null=True
                )),
                ('is_active', models.BooleanField(default=True)),
                ('industry', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='startups',
                    to='startups.industry'
                )),
                ('location', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='startups',
                    to='startups.location'
                )),
            ],
            options={
                'verbose_name': 'Startup',
                'verbose_name_plural': 'Startups',
                'db_table': 'startups',
                'ordering': ['company_name'],
            },
        ),
    ]

