# Generated by Django 5.2.4 on 2025-09-04 07:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0003_project_milestones_project_technologies_used_and_more'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailNotificationPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='email_notification_preferences', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.SlugField(help_text='Unique code for the notification type', unique=True)),
                ('name', models.CharField(help_text='Human-readable name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of when this notification is sent')),
                ('default_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily_digest', 'Daily Digest'), ('weekly_summary', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', help_text='Default frequency for this notification type', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this notification type is active')),
            ],
            options={
                'verbose_name': 'Notification Type',
                'verbose_name_plural': 'Notification Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='notification_preferences', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('enable_in_app', models.BooleanField(default=True, verbose_name='Enable in-app notifications')),
                ('enable_email', models.BooleanField(default=True, verbose_name='Enable email notifications')),
                ('enable_push', models.BooleanField(default=False, verbose_name='Enable push notifications')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('triggered_by_type', models.CharField(blank=True, choices=[('investor', 'Investor'), ('startup', 'Startup'), ('system', 'System')], max_length=20, null=True)),
                ('related_startup_id', models.CharField(blank=True, max_length=64, null=True)),
                ('related_message_id', models.CharField(blank=True, max_length=64, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('related_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='projects.project')),
                ('triggered_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_notifications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to='communications.notificationtype')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read', 'created_at'], name='idx_notif_user_read'), models.Index(fields=['expires_at'], name='idx_notif_expires')],
            },
        ),
        migrations.CreateModel(
            name='EmailNotificationTypePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True, help_text='Whether email notifications for this type are enabled', verbose_name='Enabled')),
                ('email_preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types_enabled', to='communications.emailnotificationpreference')),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_preferences', to='communications.notificationtype')),
            ],
            options={
                'verbose_name': 'Email Notification Type Preference',
                'verbose_name_plural': 'Email Notification Type Preferences',
                'constraints': [models.UniqueConstraint(fields=('email_preference', 'notification_type'), name='unique_email_preference_notification_type')],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationTypePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily_digest', 'Daily Digest'), ('weekly_summary', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='communications.notificationtype')),
                ('user_preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_preferences', to='communications.usernotificationpreference')),
            ],
            options={
                'verbose_name': 'User Notification Type Preference',
                'constraints': [models.UniqueConstraint(fields=('user_preference', 'notification_type'), name='unique_user_preference_notification_type')],
            },
        ),
    ]
