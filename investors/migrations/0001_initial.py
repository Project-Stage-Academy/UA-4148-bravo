# Generated by Django 5.2.4 on 2025-08-18 13:18

import django.core.validators
import django.db.models.deletion
import validation.validate_email
import validation.validate_image
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('startups', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=254, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/logos/', validators=[validation.validate_image.validate_image_file])),
                ('description', models.TextField(blank=True, default='')),
                ('website', models.URLField(blank=True, default='')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[validation.validate_email.validate_email_custom])),
                ('founded_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2025)])),
                ('team_size', models.PositiveIntegerField(blank=True, default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stage', models.CharField(choices=[('idea', 'Idea'), ('mvp', 'MVP'), ('launch', 'Launch'), ('scale', 'Scale'), ('exit', 'Exit')], default='mvp', help_text='Current development stage of the investor', max_length=20, verbose_name='Stage')),
                ('fund_size', models.DecimalField(blank=True, decimal_places=2, default=0, help_text="Size of the investor's fund, must not be negative", max_digits=20, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fund Size')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='startups.industry')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='startups.location')),
                ('user', models.OneToOneField(help_text='The user who owns this investor', on_delete=django.db.models.deletion.CASCADE, related_name='investor', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Investor',
                'verbose_name_plural': 'Investors',
                'db_table': 'investors',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='SavedStartup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('watching', 'Watching'), ('contacted', 'Contacted'), ('negotiating', 'Negotiating'), ('passed', 'Passed')], default='watching', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('investor', models.ForeignKey(db_column='investor_profile_id', on_delete=django.db.models.deletion.PROTECT, related_name='saved_startups', to='investors.investor')),
                ('startup', models.ForeignKey(db_column='startup_profile_id', on_delete=django.db.models.deletion.PROTECT, related_name='saved_by_investors', to='startups.startup')),
            ],
            options={
                'verbose_name': 'Saved Startup',
                'verbose_name_plural': 'Saved Startups',
                'db_table': 'saved_startups',
                'ordering': ['-saved_at'],
            },
        ),
        migrations.AddField(
            model_name='investor',
            name='bookmarks',
            field=models.ManyToManyField(blank=True, help_text='Startups that this investor has bookmarked.', related_name='bookmarked_by', through='investors.SavedStartup', to='startups.startup', verbose_name='Bookmarked startups'),
        ),
        migrations.AddIndex(
            model_name='savedstartup',
            index=models.Index(fields=['investor', 'startup'], name='saved_investor_startup_idx'),
        ),
        migrations.AddIndex(
            model_name='savedstartup',
            index=models.Index(fields=['status'], name='saved_status_idx'),
        ),
        migrations.AddIndex(
            model_name='savedstartup',
            index=models.Index(fields=['-saved_at'], name='saved_saved_at_desc_idx'),
        ),
        migrations.AddConstraint(
            model_name='savedstartup',
            constraint=models.UniqueConstraint(fields=('investor', 'startup'), name='uniq_investor_startup'),
        ),
        migrations.AddIndex(
            model_name='investor',
            index=models.Index(fields=['company_name'], name='investor_company_name_idx'),
        ),
        migrations.AddIndex(
            model_name='investor',
            index=models.Index(fields=['stage'], name='investor_stage_idx'),
        ),
    ]
