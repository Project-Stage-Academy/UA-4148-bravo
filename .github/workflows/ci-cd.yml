name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Run Migrations
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: dummy_key_for_ci
          DEBUG: 0
          DB_NAME: test_db
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
        run: |
          python manage.py migrate

      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: dummy_key_for_ci
          DEBUG: 0
          DB_NAME: test_db
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
        run: |
          python manage.py test

      - name: Run Linting (flake8 - allow fail)
        continue-on-error: true
        run: |
          flake8 . --exclude=venv,migrations,__pycache__,settings.py

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Temporarily disabled Docker Hub login
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t my-django-app:latest .

      # Temporarily disabled push to Docker Hub
      # - name: Push Docker Image
      #   run: |
      #     docker push ${{ secrets.DOCKER_USERNAME }}/projectname:latest

  deploy:
    if: false  # Deployment is disabled during development
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Production (disabled)
        run: |
          echo "Deployment is skipped for now during development phase"
